<% include header.ejs %>
<% include navigation.ejs %>
<script src="/js/jdex.js"></script>
<h1>Upload Network</h1>

<div class="" id="holder">
    <hr>
    <form class="form-horizontal" action="" method="post" enctype="multiipart/form-data" id="networkUploadForm">
        <div class="row-fluid">
            <!--
                        <div class="btn-group span2">
                            <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">
                                <span id="type">File Type</span>
                                <span class="caret"></span>
                            </a>
                            <ul class="dropdown-menu" role="menu" arai-labelledby="dropdownMenu">
                                <li><a tabindex="-1" onclick="addForm(this)" title="openbel-document">OpenBEL Document </a></li>
                                <li><a tabindex="-1" onclick="addForm(this)" title="sif">SIF </a></li>
                            </ul>
                        </div>
            -->
            <div class="span3">
                <input type="file" id="fileForUpload" name="network" size="40">
            </div>

        </div>
        <div class="row-fluid">
            <div class="span3">
                <input type="submit" value="Submit">
            </div>
        </div>
    </form>
</div>
<div id="message"></div>
<hr>
<div id="dataToUpload"></div>

<script>
    var data, files, file, onloadEvent, xml;

    function handleFileSelect(selectEvt) {
        files = selectEvt.target.files; // FileList object
        file = files[0];

        var reader = new FileReader();
        reader.onload = function (evt) {
            onloadEvent = evt;
            var name = file.name;
            // Check file format by suffix
            if (hasSuffix(name, ".xbel")) {
                // XBEL Format  (convert to JDEx and upload)
                $('#message').html("Converting text to XML (XBEL) for " + name);
                xml = $.parseXML(evt.target.result);
                $('#message').html("Converting XBEL to JDEx for " + name);
                var graph = jdex.createGraphFromXBEL(xml);
                data = graph.toJDEx();
                $('#dataToUpload').html(graph.serializeJDEx());
                $('#message').html("Ready to upload " + name);


            } else if (hasSuffix(name, ".sif")) {
                // SIF Format  (convert to JDEx and upload)
                var lines = evt.target.result.split("\n");
                // SIF data is now an array of strings
                $('#message').html("Converting SIF to JDEx for " + name);
                var graph = jdex.createGraphFromSIF(lines);
                graph.properties.name = name;
                graph.properties.format = "sif";
                graph.properties.title = name;
                graph.properties.source = "unknown";
                graph.properties.description = "sif network";
                data = graph.toJDEx();
                //$('#dataToUpload').html(graph.serializeJDEx());
                $('#message').html("Ready to upload " + name);

            } else if (hasSuffix(name, ".jdex")) {
                // JDEx Format (just upload)
                data = JSON.parse(evt.target.result);
                //$('#dataToUpload').html(data);
                $('#message').html("Ready to upload " + name);
                //doUpload(data);
            } else {
                $('#message').html("Unsupported file type: " + type);
            }
        };

        reader.onerror = function (evt) {
            document.getElementById("message").innerHTML = "error reading file";
        };

        reader.readAsText(file, "UTF-8");

    };

    /*
        // files is a FileList of File objects. List some properties.
        var output = [];
        for (var i = 0, f; f = files[i]; i++) {
            output.push('<li><strong>', escape(f.name), '</strong> (', f.type || 'n/a', ') - ',
                    f.size, ' bytes, last modified: ',
                    f.lastModifiedDate ? f.lastModifiedDate.toLocaleDateString() : 'n/a',
                    '</li>');
        }
        document.getElementById('list').innerHTML = '<ul>' + output.join('') + '</ul>';
    }
    */

    /* attach the file select handler to the file element */
    document.getElementById('fileForUpload').addEventListener('change', handleFileSelect, false);

    /* attach a submit handler to the form */
    $('#networkUploadForm').submit(function (event) {
        event.preventDefault();  // stop form from submitting normally
        $('#message').html("Uploading JDEx with account = " + ndexUI.user.id + " for " + file.name);
        ndexClient.createNetwork(data, ndexUI.user.id,
                function (result) {
                    //
                    // Success: redirect to edit metadata for the new network
                    //
                    window.location = "/editNetworkMetadata/" + result.Id;
                },
                function (error) {
                    //
                    // Failure: display message
                    //
                    $('#message').html(JSON.stringify(error));
                });
    });

    function hasSuffix(str, suffix){
        if(str.indexOf(suffix, str.length - suffix.length) !== -1){
            return true;
        }
        return false;
    }

    ndexUI.initPage();

</script>
<% include footer.ejs %>
